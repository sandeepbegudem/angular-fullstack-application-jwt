package com.sandeepbegudem.backend.application.entity;import jakarta.persistence.*;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import java.util.HashSet;import java.util.Objects;import java.util.Set;@AllArgsConstructor@NoArgsConstructor@Data@Entity@Table(name = "roles")public class Role {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    @Column(name = "role_id", nullable = false)    private Long roleId;    @Basic    @Column(name = "name", nullable = false, length = 45, unique = true)    private String name;    @ManyToMany(mappedBy = "roles", fetch = FetchType.EAGER)    private Set<User> users = new HashSet<>();    public Role(String name) {        this.name = name;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        Role role = (Role) o;        return Objects.equals(roleId, role.roleId) && Objects.equals(name, role.name);    }    @Override    public int hashCode() {        return Objects.hash(roleId, name);    }}