package com.sandeepbegudem.backend.application.entity;import jakarta.persistence.*;import lombok.AllArgsConstructor;import lombok.Data;import lombok.NoArgsConstructor;import java.util.HashSet;import java.util.Objects;import java.util.Set;@AllArgsConstructor@NoArgsConstructor@Data@Entity@Table(name = "instructors")public class Instructor {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    @Column(name = "instructor_id", nullable = false)    private Long instructorId;    @Basic    @Column(name = "first_name", nullable = false, length = 45)    private String firstName;    @Basic    @Column(name = "last_name", nullable = false, length = 45)    private String lastName;    @Basic    @Lob    @Column(name = "summary", nullable = false, length = 65)    private String summary;    @OneToMany(mappedBy = "instructor", fetch = FetchType.LAZY)    private Set<Course> courses = new HashSet<>();    @OneToOne(cascade = CascadeType.REMOVE)    @JoinColumn(name = "user_id", referencedColumnName = "user_id", nullable = false)    private User user;    public Instructor (String firstName, String lastName, String summary, User user) {        this.firstName = firstName;        this.lastName = lastName;        this.summary = summary;        this.user = user;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        Instructor that = (Instructor) o;        return Objects.equals(instructorId, that.instructorId) && Objects.equals(firstName, that.firstName) && Objects.equals(lastName, that.lastName) && Objects.equals(summary, that.summary);    }    @Override    public int hashCode() {        return Objects.hash(instructorId, firstName, lastName, summary);    }}